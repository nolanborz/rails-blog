<div>
  <section>
    <div class="border-t-2 border-black pt-6 mt-6 first:mt-0 first:pt-0 first:border-t-0">
      <div class="flex flex-col md:flex-row gap-2 font-mono">
        <div class="md:w-2/5 flex-shrink-0 flex items-center">
          <%= image_tag "portfolio.png", alt: "Project Screenshot", class: "w-full h-auto border-2 border-black" %>
        </div>
        
        <div class="md:w-3/5">
          <h2 class="text-2xl font-bold mb-4 text-center md:text-left">Portfolio Page</h2>
          <p class="mb-4 text-left">
            This is my original portfolio site I built as a project to learn the React/Vite framework.
            The best feature is certainly the language toggle, which utilizes i18n to shift seamlessly between English and Japanese.
            After a colleage pointed out my original Frankenstein language toggle configuration would be a beast
            to scale and suggested I try i18n, I went ahead and reconfigured the function. 
            Now I can add languages far easier than I could have before.
          </p>
          <p class="text-left font-bold">React, TypeScript, JavaScript, Tailwindcss, Heroku</p>
        </div>
      </div>
    </div>
    <div class="border-t-2 border-black pt-6 mt-6 first:mt-0 first:pt-0 first:border-t-0">
      <div class="flex flex-col md:flex-row gap-2 font-mono">
        <div class="md:w-2/5 flex-shrink-0 flex items-center">
          <%= image_tag "pokeshopper.png", alt: "Project Screenshot", class: "w-full h-auto border-2 border-black" %>
        </div>
        
        <div class="md:w-3/5">
          <h2 class="text-2xl font-bold mb-4 text-center md:text-left">PokeShopper</h2>
          <p class="mb-4 text-left">
            This is a Rails app I made to conclude my studies with the Odin Project. It
            includes a shopping interface, a cart, and a mock checkout process. Hotwire and
            Turbo really shine in this app as they contribute towards a seamless experience
            as the user navigates and interacts with the interface.
          </p>
          <p class="text-left font-bold">Ruby on Rails, JavaScript, Tailwindcss</p>
        </div>
      </div>
    </div>
    <div class="border-t-2 border-black pt-6 mt-6 first:mt-0 first:pt-0 first:border-t-0">
      <div class="flex flex-col md:flex-row gap-2 font-mono">
        <div class="md:w-2/5 flex-shrink-0 flex items-center">
          <%= image_tag "borzonibook.png", alt: "Project Screenshot", class: "w-full h-auto border-2 border-black" %>
        </div>
        
        <div class="md:w-3/5">
          <h2 class="text-2xl font-bold mb-4 text-center md:text-left">Borzonibook</h2>
          <p class="mb-4 text-left">
            Borzonibook is an SNS site I made with Rails and ended up pushing to production with Heroku.
            Setting up the models between users, posts, comments, and likes was the trickiest part, but gained
            a wealth of knowledge and understanding in the process. I was also able to implement the Gravatar API
            for default avatars for each user, as well as Google sign-in through Oauth2. I've come a long way since 
            working on this, and I look forward to fleshing it out more into a more complete product.
          </p>
          <p class="text-left font-bold">Ruby on Rails, JavaScript, Tailwindcss, Heroku</p>
        </div>
      </div>
    </div>
    <div class="border-t-2 border-black pt-6 mt-6 first:mt-0 first:pt-0 first:border-t-0">
      <div class="flex flex-col md:flex-row gap-2 font-mono">
        <div class="md:w-2/5 flex-shrink-0 flex items-center">
          <%= image_tag "projectsample.png", alt: "Project Screenshot", class: "w-full h-auto border-2 border-black" %>
        </div>
        <div class="md:w-3/5">
          <h2 class="text-2xl font-bold mb-4 text-center md:text-left">Project Avramax</h2>
          <p class="mb-4 text-left">
            Project Avramax, my current project, is a deckbuilding application for Yugioh.
            Queery a database of over 13,000 cards, add cards to your deck, save them, and share
            them with your friends. I plan to push Hotwire to its limits into making this not only
            a deckbuilding application, but a manual dueling application as well.
          </p>
          <p class="text-left font-bold">Ruby on Rails, Hotwire, JavaScript, Tailwindcss, PostgreSQL</p>
        </div>
      </div>
    </div>
  </section>
</div>
